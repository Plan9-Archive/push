	TEXT	morecode+0(SB),0,$12
	ADDL	$100,ncode+0(SB)
	MOVL	codebuf+0(SB),CX
	MOVL	CX,(SP)
	MOVL	ncode+0(SB),CX
	SALL	$2,CX
	MOVL	CX,4(SP)
	CALL	,realloc+0(SB)
	CMPL	AX,$0
	MOVL	AX,codebuf+0(SB)
	JNE	,7(PC)
	DATA	.string<>+0(SB)/8,$"Can't re"
	DATA	.string<>+8(SB)/8,$"alloc %d"
	DATA	.string<>+16(SB)/8,$" bytes i"
	DATA	.string<>+24(SB)/8,$"n moreco"
	MOVL	$.string<>+0(SB),AX
	MOVL	AX,(SP)
	MOVL	ncode+0(SB),AX
	SALL	$2,AX
	MOVL	AX,4(SP)
	CALL	,panic+0(SB)
	MOVL	$0,AX
	RET	,
	RET	,
	TEXT	stuffdot+0(SB),0,$12
	MOVL	a+0(FP),DX
	CMPL	DX,$0
	JLT	,5(PC)
	MOVL	codep+0(SB),AX
	CMPL	AX,DX
	JLE	,2(PC)
	JMP	,6(PC)
	DATA	.string<>+32(SB)/8,$"de!\zBad "
	DATA	.string<>+40(SB)/8,$"address "
	DATA	.string<>+48(SB)/8,$"%d in st"
	MOVL	$.string<>+36(SB),AX
	MOVL	AX,(SP)
	MOVL	DX,4(SP)
	CALL	,panic+0(SB)
	MOVL	a+0(FP),DX
	MOVL	codep+0(SB),AX
	MOVL	DX,CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	RET	,
	TEXT	compile+0(SB),0,$12
	MOVL	$100,CX
	MOVL	CX,ncode+0(SB)
	SALL	$2,CX
	MOVL	CX,(SP)
	CALL	,emalloc+0(SB)
	MOVL	AX,codebuf+0(SB)
	MOVL	$0,DX
	MOVL	DX,codep+0(SB)
	CMPL	DX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),DX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),CX
	MOVL	$0,(CX)(DX*4)
	INCL	,DX
	MOVL	DX,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	AX,(SP)
	CMPL	flag+404(SB),$0
	JEQ	,3(PC)
	MOVL	$1,AX
	JMP	,2(PC)
	MOVL	$0,AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	CMPL	nerror+0(SB),$0
	JEQ	,6(PC)
	MOVL	codebuf+0(SB),AX
	MOVL	AX,(SP)
	CALL	,efree+0(SB)
	MOVL	$0,AX
	RET	,
	CALL	,readhere+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xreturn+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),CX
	MOVL	$0,(CX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	$1,AX
	RET	,
	RET	,
	TEXT	cleanhere+0(SB),0,$8
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xdelhere+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	f+0(FP),CX
	MOVL	CX,(SP)
	CALL	,strdup+0(SB)
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	RET	,
	TEXT	fnstr+0(SB),0,$28
	CALL	,openstr+0(SB)
	MOVL	AX,CX
	MOVBLSX	nl+0(SB),AX
	MOVB	AX,svnl+-9(SP)
	MOVB	$59,nl+0(SB)
	DATA	.string<>+56(SB)/8,$"uffdot\z%"
	MOVL	CX,f+-4(SP)
	MOVL	CX,(SP)
	MOVL	$.string<>+63(SB),AX
	MOVL	AX,4(SP)
	MOVL	t+0(FP),AX
	MOVL	AX,8(SP)
	CALL	,pfmt+0(SB)
	MOVL	f+-4(SP),CX
	MOVBLSX	svnl+-9(SP),AX
	MOVB	AX,nl+0(SB)
	MOVL	12(CX),AX
	MOVL	AX,v+-8(SP)
	MOVL	$0,12(CX)
	MOVL	CX,(SP)
	CALL	,closeio+0(SB)
	MOVL	v+-8(SP),AX
	RET	,
	RET	,
	TEXT	outcode+0(SB),0,$32
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	SI,$0
	JNE	,2(PC)
	RET	,
	MOVL	(SI),AX
	CMPL	AX,$57350
	JEQ	,4(PC)
	MOVL	(SI),AX
	CMPL	AX,$59
	JNE	,2(PC)
	JMP	,3(PC)
	MOVL	runq+0(SB),AX
	MOVL	$0,32(AX)
	JMP	,2145(PC)
	JMP	,2226(PC)
	DATA	.string<>+64(SB)/8,$"t\zbad ty"
	DATA	.string<>+72(SB)/8,$"pe %d in"
	DATA	.string<>+80(SB)/8,$" outcode"
	MOVL	err+0(SB),AX
	MOVL	AX,(SP)
	MOVL	$.string<>+66(SB),AX
	MOVL	AX,4(SP)
	MOVL	(SI),AX
	MOVL	AX,8(SP)
	CALL	,pfmt+0(SB)
	JMP	,-8(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xdol+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-39(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xqdol+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-70(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xsub+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-119(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xasync+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	CMPL	havefork+0(SB),$0
	JEQ	,37(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xexit+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,16(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	28(SI),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-186(PC)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	JMP	,-198(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xconc+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-247(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xbackq+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	CMPL	havefork+0(SB),$0
	JEQ	,36(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	$0,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xexit+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,16(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	28(SI),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-313(PC)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	$0,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xtrue+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,-353(PC)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	JMP	,-365(PC)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xbang+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-383(PC)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	JMP	,-389(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xcount+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-420(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	CMPL	AX,$0
	JEQ	,77(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xfn+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	AX,p+-4(SP)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	t+0(FP),CX
	MOVL	32(CX),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xunlocal+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xreturn+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,13(PC)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xdelfn+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	JMP	,-533(PC)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	$0,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xif+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xwastrue+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,-585(PC)
	MOVL	runq+0(SB),AX
	MOVL	32(AX),AX
	CMPL	AX,$0
	JNE	,7(PC)
	DATA	.string<>+88(SB)/8,$"\n\z`if no"
	DATA	.string<>+96(SB)/8,$"t' does "
	DATA	.string<>+104(SB)/8,$"not foll"
	DATA	.string<>+112(SB)/8,$"ow `if(."
	MOVL	$.string<>+90(SB),AX
	MOVL	AX,(SP)
	CALL	,yyerror+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xifnot+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,-632(PC)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	$0,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xfalse+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,-672(PC)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	JMP	,-678(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xsimple+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	eflag+4(FP),$0
	JEQ	,13(PC)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xeflag+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	JMP	,-724(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xsubshell+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	CMPL	havefork+0(SB),$0
	JEQ	,37(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xexit+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,16(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	28(SI),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	CMPL	eflag+4(FP),$0
	JEQ	,13(PC)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xeflag+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-805(PC)
	MOVL	SI,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,codeswitch+0(SB)
	JMP	,-810(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmatch+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	eflag+4(FP),$0
	JEQ	,13(PC)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xeflag+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	JMP	,-874(PC)
	MOVL	BX,q+-8(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	$0,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	MOVL	q+-8(SP),AX
	CMPL	AX,BX
	JNE	,12(PC)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xsettrue+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xtrue+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xjump+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	q+-8(SP),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,-955(PC)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	JMP	,-967(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	32(SI),AX
	CMPL	AX,$0
	JEQ	,19(PC)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xglob+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	JMP	,52(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xword+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$.string<>+125(SB),CX
	MOVL	CX,(SP)
	CALL	,strdup+0(SB)
	MOVL	codep+0(SB),BX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xdol+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	BP,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xlocal+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BP*4)
	INCL	,BP
	MOVL	BP,codep+0(SB)
	CMPL	BP,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xfor+0(SB),CX
	MOVL	codebuf+0(SB),BX
	MOVL	CX,(BX)(BP*4)
	MOVL	BP,AX
	INCL	,BP
	MOVL	AX,p+-4(SP)
	MOVL	BP,codep+0(SB)
	CMPL	BP,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BP*4)
	MOVL	BP,AX
	INCL	,BP
	MOVL	BP,codep+0(SB)
	MOVL	AX,q+-8(SP)
	MOVL	t+0(FP),AX
	MOVL	36(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xjump+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	p+-4(SP),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	q+-8(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xunlocal+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-1171(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xword+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	16(SI),CX
	MOVL	CX,(SP)
	CALL	,strdup+0(SB)
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-1200(PC)
	MOVL	4(SI),AX
	CMPL	AX,$5
	JNE	,43(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xdup+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	8(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	12(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	JMP	,28(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xclose+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	8(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpopredir+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-1290(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpipefd+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	4(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	CMPL	havefork+0(SB),$0
	JEQ	,37(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,p+-4(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xexit+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,16(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	28(SI),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-1371(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xglob+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	JMP	,54(PC)
	JMP	,68(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xappend+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	JMP	,-13(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xwrite+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	JMP	,-26(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xread+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	JMP	,-39(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xrdwr+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	JMP	,-52(PC)
	MOVL	t+0(FP),AX
	MOVL	4(AX),AX
	CMPL	AX,$3
	JGT	,7(PC)
	JEQ	,-30(PC)
	CMPL	AX,$1
	JEQ	,-58(PC)
	CMPL	AX,$2
	JEQ	,-47(PC)
	JMP	,-62(PC)
	CMPL	AX,$4
	JEQ	,-37(PC)
	CMPL	AX,$7
	JEQ	,-26(PC)
	JMP	,-67(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	t+0(FP),AX
	MOVL	8(AX),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpopredir+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-1503(PC)
	MOVL	SI,tt+-12(SP)
	JMP	,4(PC)
	JMP	,2(PC)
	JMP	,9(PC)
	MOVL	36(SI),SI
	CMPL	SI,$0
	JEQ	,4(PC)
	MOVL	(SI),AX
	CMPL	AX,$61
	JEQ	,2(PC)
	JMP	,-7(PC)
	JMP	,-9(PC)
	CMPL	SI,$0
	JEQ	,92(PC)
	MOVL	tt+-12(SP),SI
	JMP	,5(PC)
	JMP	,2(PC)
	JMP	,59(PC)
	MOVL	t+0(FP),AX
	MOVL	36(AX),SI
	MOVL	SI,t+0(FP)
	MOVL	(SI),AX
	CMPL	AX,$61
	JNE	,-6(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xlocal+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	JMP	,-59(PC)
	MOVL	SI,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BP
	MOVL	tt+-12(SP),BX
	JMP	,4(PC)
	JMP	,2(PC)
	JMP	,20(PC)
	MOVL	36(BX),BX
	MOVL	BX,t+0(FP)
	MOVL	(BX),AX
	CMPL	AX,$61
	JNE	,-5(PC)
	CMPL	BP,ncode+0(SB)
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	MOVL	t+0(FP),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xunlocal+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BP*4)
	INCL	,BP
	MOVL	BP,codep+0(SB)
	JMP	,-20(PC)
	JMP	,62(PC)
	MOVL	tt+-12(SP),SI
	JMP	,5(PC)
	JMP	,2(PC)
	JMP	,58(PC)
	MOVL	t+0(FP),AX
	MOVL	36(AX),SI
	CMPL	SI,$0
	MOVL	SI,t+0(FP)
	JEQ	,-5(PC)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	32(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xassign+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	JMP	,-58(PC)
	MOVL	tt+-12(SP),AX
	MOVL	AX,t+0(FP)
	JMP	,-1672(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpipe+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	8(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	12(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	CMPL	havefork+0(SB),$0
	JEQ	,52(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	AX,p+-4(SP)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,q+-8(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xexit+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,30(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	28(SI),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),BX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,q+-8(SP)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xreturn+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	q+-8(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpipewait+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-1829(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xfanin+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	8(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	12(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	CMPL	havefork+0(SB),$0
	JEQ	,52(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	AX,p+-4(SP)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,q+-8(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xexit+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,30(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	28(SI),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),BX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,q+-8(SP)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xreturn+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	q+-8(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpipewait+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-1986(PC)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xfanout+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	8(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	12(SI),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	CMPL	havefork+0(SB),$0
	JEQ	,52(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,8(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	ncode+0(SB),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	AX,p+-4(SP)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,q+-8(SP)
	MOVL	28(SI),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xexit+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	p+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	JMP	,30(PC)
	MOVL	BX,codep+0(SB)
	CMPL	BX,BP
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),SI
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	28(SI),CX
	MOVL	CX,(SP)
	CALL	,fnstr+0(SB)
	MOVL	codep+0(SB),BX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,q+-8(SP)
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xreturn+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	q+-8(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpipewait+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	JMP	,-2143(PC)
	MOVL	(SI),AX
	CMPL	AX,$57356
	JGT	,41(PC)
	JEQ	,-975(PC)
	CMPL	AX,$57348
	JGT	,21(PC)
	JEQ	,-1275(PC)
	CMPL	AX,$61
	JGT	,11(PC)
	JEQ	,-649(PC)
	CMPL	AX,$34
	JEQ	,-2115(PC)
	CMPL	AX,$36
	JEQ	,-2148(PC)
	CMPL	AX,$38
	JEQ	,-2039(PC)
	CMPL	AX,$59
	JEQ	,-1974(PC)
	JMP	,-2161(PC)
	CMPL	AX,$94
	JEQ	,-1965(PC)
	CMPL	AX,$96
	JEQ	,-1918(PC)
	CMPL	AX,$57346
	JEQ	,-1200(PC)
	JMP	,-2168(PC)
	CMPL	AX,$57352
	JGT	,9(PC)
	JEQ	,-1806(PC)
	CMPL	AX,$57349
	JEQ	,-1640(PC)
	CMPL	AX,$57350
	JEQ	,-1590(PC)
	CMPL	AX,$57351
	JEQ	,-1367(PC)
	JMP	,-2178(PC)
	CMPL	AX,$57353
	JEQ	,-1456(PC)
	CMPL	AX,$57354
	JEQ	,-1377(PC)
	CMPL	AX,$57355
	JEQ	,-1764(PC)
	JMP	,-2185(PC)
	CMPL	AX,$57365
	JGT	,21(PC)
	JEQ	,-1233(PC)
	CMPL	AX,$57361
	JGT	,11(PC)
	JEQ	,-205(PC)
	CMPL	AX,$57357
	JEQ	,-822(PC)
	CMPL	AX,$57358
	JEQ	,-995(PC)
	CMPL	AX,$57359
	JEQ	,-525(PC)
	CMPL	AX,$57360
	JEQ	,-370(PC)
	JMP	,-2200(PC)
	CMPL	AX,$57362
	JEQ	,-2132(PC)
	CMPL	AX,$57363
	JEQ	,-1526(PC)
	CMPL	AX,$57364
	JEQ	,-1853(PC)
	JMP	,-2207(PC)
	CMPL	AX,$57369
	JGT	,9(PC)
	JEQ	,-920(PC)
	CMPL	AX,$57366
	JEQ	,-1829(PC)
	CMPL	AX,$57367
	JEQ	,-1542(PC)
	CMPL	AX,$57368
	JEQ	,-1833(PC)
	JMP	,-2217(PC)
	CMPL	AX,$57370
	JEQ	,-1906(PC)
	CMPL	AX,$57371
	JEQ	,-1589(PC)
	CMPL	AX,$57372
	JEQ	,-1834(PC)
	JMP	,-2224(PC)
	MOVL	t+0(FP),AX
	MOVL	(AX),AX
	CMPL	AX,$57350
	JEQ	,5(PC)
	MOVL	t+0(FP),AX
	MOVL	(AX),AX
	CMPL	AX,$59
	JNE	,2(PC)
	JMP	,11(PC)
	MOVL	runq+0(SB),AX
	MOVL	t+0(FP),CX
	MOVL	(CX),CX
	CMPL	CX,$57349
	JNE	,3(PC)
	MOVL	$1,CX
	JMP	,2(PC)
	MOVL	$0,CX
	MOVL	CX,32(AX)
	JMP	,15(PC)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	CMPL	AX,$0
	JEQ	,11(PC)
	MOVL	runq+0(SB),AX
	MOVL	t+0(FP),CX
	MOVL	28(CX),CX
	MOVL	(CX),CX
	CMPL	CX,$57349
	JNE	,3(PC)
	MOVL	$1,CX
	JMP	,2(PC)
	MOVL	$0,CX
	MOVL	CX,32(AX)
	RET	,
	TEXT	codeswitch+0(SB),0,$32
	MOVL	t+0(FP),DX
	MOVL	32(DX),AX
	MOVL	28(AX),AX
	CMPL	AX,$0
	JEQ	,6(PC)
	MOVL	32(DX),AX
	MOVL	28(AX),AX
	MOVL	(AX),AX
	CMPL	AX,$59
	JEQ	,2(PC)
	JMP	,9(PC)
	MOVL	32(DX),CX
	MOVL	28(CX),CX
	MOVL	28(CX),CX
	MOVL	CX,(SP)
	CALL	,iscase+0(SB)
	CMPL	AX,$0
	JEQ	,2(PC)
	JMP	,5(PC)
	DATA	.string<>+120(SB)/8,$"..)'\z*\zc"
	DATA	.string<>+128(SB)/8,$"ase miss"
	DATA	.string<>+136(SB)/8,$"ing in s"
	MOVL	$.string<>+127(SB),AX
	MOVL	AX,(SP)
	CALL	,yyerror+0(SB)
	RET	,
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	BP,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xjump+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BP*4)
	INCL	,BP
	MOVL	BP,codep+0(SB)
	CMPL	BP,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BP*4)
	MOVL	BP,AX
	INCL	,BP
	MOVL	AX,nextcase+-12(SP)
	MOVL	BP,codep+0(SB)
	CMPL	BP,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xjump+0(SB),CX
	MOVL	codebuf+0(SB),BX
	MOVL	CX,(BX)(BP*4)
	MOVL	BP,AX
	INCL	,BP
	MOVL	AX,out+-8(SP)
	MOVL	BP,codep+0(SB)
	CMPL	BP,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BP
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BP*4)
	MOVL	BP,AX
	INCL	,BP
	MOVL	BP,codep+0(SB)
	MOVL	AX,leave+-4(SP)
	MOVL	nextcase+-12(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	MOVL	codep+0(SB),BX
	MOVL	t+0(FP),AX
	MOVL	32(AX),AX
	MOVL	28(AX),BP
	JMP	,3(PC)
	JMP	,2(PC)
	JMP	,128(PC)
	MOVL	(BP),AX
	CMPL	AX,$59
	JNE	,-3(PC)
	MOVL	BP,t+0(FP)
	MOVL	32(BP),AX
	MOVL	AX,tt+-16(SP)
	CMPL	BX,ncode+0(SB)
	JNE	,7(PC)
	CALL	,morecode+0(SB)
	MOVL	t+0(FP),BP
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xmark+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	28(BP),AX
	MOVL	28(AX),CX
	JMP	,5(PC)
	JMP	,2(PC)
	JMP	,14(PC)
	MOVL	t+0(FP),AX
	MOVL	28(AX),CX
	MOVL	(CX),AX
	CMPL	AX,$57364
	JNE	,-5(PC)
	MOVL	CX,t+0(FP)
	MOVL	32(CX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	codep+0(SB),BX
	JMP	,-14(PC)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xcase+0(SB),AX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(BX*4)
	INCL	,BX
	MOVL	BX,codep+0(SB)
	CMPL	BX,ncode+0(SB)
	JNE	,6(PC)
	CALL	,morecode+0(SB)
	MOVL	codep+0(SB),BX
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	codebuf+0(SB),DX
	MOVL	$0,(DX)(BX*4)
	MOVL	BX,AX
	INCL	,BX
	MOVL	BX,codep+0(SB)
	MOVL	AX,nextcase+-12(SP)
	MOVL	tt+-16(SP),DX
	JMP	,3(PC)
	JMP	,2(PC)
	JMP	,32(PC)
	MOVL	(DX),AX
	CMPL	AX,$59
	JNE	,17(PC)
	MOVL	DX,t+0(FP)
	MOVL	28(DX),CX
	MOVL	CX,(SP)
	CALL	,iscase+0(SB)
	CMPL	AX,$0
	JEQ	,2(PC)
	JMP	,-10(PC)
	MOVL	t+0(FP),AX
	MOVL	28(AX),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	MOVL	t+0(FP),AX
	MOVL	32(AX),DX
	JMP	,12(PC)
	MOVL	DX,t+0(FP)
	MOVL	DX,(SP)
	CALL	,iscase+0(SB)
	CMPL	AX,$0
	JNE	,6(PC)
	MOVL	t+0(FP),AX
	MOVL	AX,(SP)
	MOVL	eflag+4(FP),AX
	MOVL	AX,4(SP)
	CALL	,outcode+0(SB)
	JMP	,-30(PC)
	JMP	,-32(PC)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xjump+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	out+-8(SP),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	MOVL	nextcase+-12(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	MOVL	t+0(FP),BP
	MOVL	codep+0(SB),BX
	JMP	,-128(PC)
	MOVL	leave+-4(SP),AX
	MOVL	AX,(SP)
	CALL	,stuffdot+0(SB)
	MOVL	codep+0(SB),AX
	CMPL	AX,ncode+0(SB)
	JNE	,5(PC)
	CALL	,morecode+0(SB)
	CMPL	AX,$0
	JNE	,2(PC)
	JMP	,1(PC)
	MOVL	$Xpopm+0(SB),AX
	MOVL	codep+0(SB),CX
	MOVL	codebuf+0(SB),DX
	MOVL	AX,(DX)(CX*4)
	INCL	,codep+0(SB)
	RET	,
	TEXT	iscase+0(SB),0,$12
	MOVL	t+0(FP),BX
	MOVL	(BX),AX
	CMPL	AX,$57363
	JEQ	,3(PC)
	MOVL	$0,AX
	RET	,
	JMP	,6(PC)
	JMP	,2(PC)
	JMP	,6(PC)
	MOVL	(BX),AX
	CMPL	AX,$57364
	JNE	,-3(PC)
	MOVL	28(BX),BX
	JMP	,-6(PC)
	DATA	.string<>+144(SB)/8,$"witch\zca"
	MOVL	(BX),CX
	CMPL	CX,$57356
	JNE	,4(PC)
	MOVL	20(BX),CX
	CMPL	CX,$0
	JEQ	,2(PC)
	JMP	,8(PC)
	MOVL	16(BX),DX
	MOVL	DX,(SP)
	MOVL	$.string<>+150(SB),DX
	MOVL	DX,4(SP)
	CALL	,strcmp+0(SB)
	CMPL	AX,$0
	JEQ	,2(PC)
	JMP	,3(PC)
	MOVL	$1,AX
	JMP	,2(PC)
	MOVL	$0,AX
	RET	,
	RET	,
	TEXT	codecopy+0(SB),0,$0
	MOVL	cp+0(FP),AX
	INCL	,(AX)
	RET	,
	RET	,
	TEXT	codefree+0(SB),0,$16
	MOVL	cp+0(FP),CX
	DECL	,(CX)
	MOVL	(CX),AX
	CMPL	AX,$0
	JEQ	,2(PC)
	RET	,
	MOVL	cp+0(FP),CX
	ADDL	$4,CX
	JMP	,4(PC)
	JMP	,2(PC)
	JMP	,96(PC)
	ADDL	$4,CX
	MOVL	(CX),AX
	CMPL	AX,$0
	JEQ	,-4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xappend+0(SB)
	JEQ	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xclose+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xread+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xwrite+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xrdwr+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xasync+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xbackq+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xcase+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xfalse+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xfor+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xjump+0(SB)
	JNE	,2(PC)
	JMP	,4(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xsubshell+0(SB)
	JNE	,2(PC)
	JMP	,5(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xtrue+0(SB)
	JEQ	,2(PC)
	JMP	,3(PC)
	ADDL	$4,CX
	JMP	,38(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xdup+0(SB)
	JEQ	,5(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xpipefd+0(SB)
	JEQ	,2(PC)
	JMP	,3(PC)
	ADDL	$8,CX
	JMP	,29(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xpipe+0(SB)
	JNE	,3(PC)
	ADDL	$16,CX
	JMP	,24(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xword+0(SB)
	JEQ	,5(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xdelhere+0(SB)
	JEQ	,2(PC)
	JMP	,8(PC)
	ADDL	$4,CX
	MOVL	CX,p+-4(SP)
	MOVL	(CX),AX
	MOVL	AX,(SP)
	CALL	,efree+0(SB)
	MOVL	p+-4(SP),CX
	JMP	,10(PC)
	MOVL	(CX),AX
	CMPL	AX,$Xfn+0(SB)
	JNE	,7(PC)
	MOVL	CX,p+-4(SP)
	MOVL	8(CX),AX
	MOVL	AX,(SP)
	CALL	,efree+0(SB)
	MOVL	p+-4(SP),CX
	ADDL	$8,CX
	JMP	,-96(PC)
	MOVL	cp+0(FP),AX
	MOVL	AX,(SP)
	CALL	,efree+0(SB)
	RET	,
	DATA	.string<>+152(SB)/8,$"se\z\z\z\z\z\z"
	GLOBL	codep+0(SB),$4
	GLOBL	gvar+0(SB),$2084
	GLOBL	ntrap+0(SB),$4
	GLOBL	mypid+0(SB),$4
	GLOBL	ndot+0(SB),$4
	GLOBL	havefork+0(SB),$4
	GLOBL	err+0(SB),$4
	GLOBL	promptstr+0(SB),$4
	GLOBL	tok+0(SB),$8192
	GLOBL	trap+0(SB),$128
	GLOBL	runq+0(SB),$4
	GLOBL	doprompt+0(SB),$4
	GLOBL	nerror+0(SB),$4
	GLOBL	eflagok+0(SB),$4
	GLOBL	lastc+0(SB),$4
	GLOBL	.string<>+0(SB),$160
	GLOBL	ncode+0(SB),$4
	GLOBL	codebuf+0(SB),$4
	GLOBL	cmdtree+0(SB),$4
	GLOBL	lastword+0(SB),$4
	GLOBL	argp+0(SB),$4
	GLOBL	args+0(SB),$4
	END	,
